created: 20230126105640952
creator: Octt
modified: 20231105154317265
modifier: Octt
tags: OcttKB WIP
title: OcttKB/WIP

!!! ''WIP/TODO''

//Note: this section is by itself in an heavy WIP state... I will never escape from this üò±Ô∏è//

* Better footnotes (should be clickable)
* Fix StaticRiver template, broken after introducing breadcrumbs ~~(showing duplicate title, and also broken elements)~~
* Move all bachecoctt links (and old GitHub stars) to proper tiddlers
* Personal easy notes on various technical things of TiddlyWiki
* Organize all my customizations into plugins easily installable by anyone
* On showing date and time of last wiki saving (on Index tab on sidebar), also consider when a system tiddler is edited

* Breadcrumbs bar:
** Show unformatted title on click or at least disable hiding of some tokens
** Button to copy full path to clipboard
** Clicking on a path element brings up the compact directory listing at that point, instead of opening the tiddler directly
*** Will need to expose an additional button to open the tiddler then
** In the small directory listing menu, add textbox/button to quickly create a new tiddler in that path

* In whatever directory listing, show button to create a new tiddler in current path

* Custom proper reusable directory tree browser (maybe like the one we have with $:/OcttKB/ToC)
** To use instead of the [[Directory macros|$:/Macros/Directory]], showing automatically on pages that are directories, and also as a file browser for the whole wiki

* Data compression of everything (without breaking TiddlyWiki CLI support)
** Choosing algorithm: best is probably Zstd
** Tiddlers should be stored compressed individually; At saving, they are all compressed and stored in the HTML; At loading, they are read and decompressed to start the app
** Single tiddlers are only compressed when it actually saves space, they should be checked at saving stage

* When opening missing tiddlers, show a preview from Wikipedia or from word dictionaries, with GUI to customize fetching options
* To the possible extent, save Git deploy scripts for the KB inside itself, for easy editing needs
* Case insensitivity for tiddlers (?)
* Handy button to reload direct scripts like $:/OcttKB/Functions.js
* A way to reload any internal script (JS macros and exports) without reloading the entire wiki
* Button to reload a single tiddler; if not possible, then the macros that can fail (e.g. MediaWiki, or all which fetch content from the Internet) should provide their own retry button
* Fix images embedded with CSS float, make them not go out of tiddler's body if too tall
* Better positioning of open/close sidebar button (should move the tiddler action bar buttons slightly to the left on single-column layout at least)

* Add a feature to let users send issues or pull requests
* Maybe add normal user comments?

* Rehost embedded games for better CSS
** Find the best retro console HTML5 emulator to embed in tiddlers which talk about certain games - they also need to be adapted to load ROMs from URL

* In here I also put some tiddlers that are about a mainstream thing or topic just because they are connected to a more worthy tiddler; they should be tagged as Mainstream so that they can be filtered out in search and stuff
* Special protection for some tiddlers, not encryption necessarily but just lock access to them globally until a specific task is performed (a password inputted is boring, maybe specific screen swipes is better)

* "Back to top" button
** Made with the style of bilibili, graphic is reused but logic needs to be reprogrammed

!!!! ''Nice to have''
* When tiddlers are transcluded show a small version of their action bar without the `<<{ >>` macro
* Automatic lightboxes for images, without having to use the `<<ibox>>` macro

!!!! ''i18n''
* Make the language bar collapsed by default, or make it a menu callable by a button on the tiddler
** Show the button as a country flag in the tiddler title maybe? Ideally showing it in place of the ":lang" suffix when present
* Selecting to open a language on a tiddler should ideally remove the previously open tiddler from the story river (or else if you switch language many times you have a cluttered river but no real advantage)
* Automatically handle connections between different-language versions of a tiddler when the only difference in title is the ":lang" suffix, without manually setting "i18n" attribute
* Automatically handle eventual tiddlers which don't exist by their common i18n name (e.g "Thing") but do with a ":lang" suffix, that should automatically transclude the //preferred language//
** Preferred language could be enforced by the user with a global setting, or just be set softly based on the language of the last tiddler opened by the user (latter is ideal)

!!!! ''External wikis''
* Unified transclusion features for external TiddlyWikis and MediaWikis
** Adapt the [[MediaWiki macro|$:/Macros/MediaWiki]] to:
** Have internal links present
*** Add lists of known wikis callable from a shorthand name
*** Choosing number (by total from first/last, or ranges), or titles, of paragraphs or chapters to transclude (with support for specifying items to exclude)
*** Retrieving and embedding files from wiki or Commons by known name (`File:`)
*** It must also handle files that aren't images (audio/video)
**** Default embed displays also the article cover image, allow setting a custom file or just `none`
** Understand transclusions from external TiddlyWikis (it seems like people just use iframes, OK for showing things but not for choosing to display specific limited sections)
* Somehow have working full-text search for tiddlers that transclude external wikis?

!!!! ''Graphing and statistics''
* Keyword (not tag) cloud ([[[tw5] Simple Word Clouds|https://talk.tiddlywiki.org/t/tw5-simple-word-clouds/3234]]?)
* Need to get an automatic content-based relationship map (like the one on [[https://baczek.me/map/]])
* Activity view with calendar (like KOReader) <!-- or squares wall (Git) -->

!!!! ''Strategies for storing data''

What are the ways that are most easily reusable, with the best UI possible, and many querying capabilities, to store the following data?

* CLI commands and flags, with snippets - how to view them in an interactive and visually compact form, to show only what each possible option does only when needed?
* Simple links that correlate to many different topics - I'm not making a dedicated tiddler for every single one, that's crazy
** ..or just any kind of data, Wikidata-style
